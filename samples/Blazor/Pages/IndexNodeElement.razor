<div class="index-node-header">
    <button type="button" @onclick="ToggleExpand" disabled="@(!Node.HasChildNodes)">
        @if (this.expanded)
        {
            <span>-</span>
        }
        else
        {
            <span>+</span>
        }
    </button>

    @NodeCharacter 
    
    @if (@Node.IntraNodeText.Length > 0)
    {
        <span class="intranode-text">@Node.IntraNodeText</span>
    }

    @if (this.Node.HasMatches)
    {
        <span class="badge bg-primary">"@($"{ParentName}{NodeCharacter}{@Node.IntraNodeText}")" - @this.Node.Matches.Count documents</span>
    }
</div>
<div class="index-node-children">
    @if (expanded && Node.HasChildNodes)
    {
        <ul>
            @foreach (var child in Node.ChildNodes.CharacterMap)
            {
                <li>
                    <IndexNodeElement Node="@child.ChildNode"
                                      NodeCharacter="@child.ChildChar.ToString()"
                                      ParentName="@($"{ParentName}{NodeCharacter}{Node.IntraNodeText}")" />
                </li>
            }
        </ul>
    }
</div>

@code {
    private bool expanded = false;

    [Parameter]
    public IndexNode Node { get; set; } = null!;

    [Parameter]
    public string NodeCharacter { get; set; } = null!;

    [Parameter]
    public string ParentName { get; set; } = null!;

    private void ToggleExpand()
    {
        this.expanded = !this.expanded;
    }
}
